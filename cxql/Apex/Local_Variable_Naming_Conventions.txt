// This query reports any local variable that is not camel case.
CxList constructors = Find_ConstructorDecl();
CxList methodDecls = Find_MethodDecls();
CxList declarators = Find_Declarators();
CxList declaratorsInMethodDecl = declarators.GetByAncs(methodDecls);
declaratorsInMethodDecl.Add(declarators.GetByAncs(constructors));

string regex = @"\s*[a-z][a-zA-Z0-9]*\s*[=;:)]";
CxList nameFollowingConventions = All.FindByRegexExt(
	regex, 
	"*.cls", 
	false, 
	System.Text.RegularExpressions.RegexOptions.Singleline
	);

List<string> validNames = nameFollowingConventions.CxSelectElementValues<CSharpGraph, string>(
	x => x.ShortName.Replace("=", "").Replace(";", "").Replace(":", "").Replace(")", "").Trim()
	);
CxList declaratorsOfCamelCase = declaratorsInMethodDecl.FindByShortNames(validNames, false);

result = declaratorsInMethodDecl - declaratorsOfCamelCase;